#!/bin/bash

prohibited_branches=('develop' 'master')
if printf '%s\n' "${prohibited_branches[@]}" | grep -qx "$(git symbolic-ref HEAD | sed -e 's:^refs/heads/::')" > /dev/null >&2; then
  echo "You can't commit to master/develop directly"
  exit 1
fi

rubocop_target_rule='^(?!(db/schema.*\.rb|db/migrate/|config/routes\.rb)).*\.(rb|jbuilder)$'

target_files=$(git diff --diff-filter=ACMR --name-only --cached | ggrep -P $rubocop_target_rule)

for i in $target_files; do
  mkdir -p "$(dirname "./.git/tmp/$i")"
  cp $i ./.git/tmp/$i
  git show ":$i" > $i
done

if [ -n "$target_files" ]; then
  rubocop_result=$(bundle exec rubocop --color $target_files)
  rubocop_status=$?

  for i in $target_files; do
    mkdir -p "$(dirname "./.git/tmp/$i")"
    mv ./.git/tmp/$i $i
  done

  if [ $rubocop_status -ne 0 ]; then
    echo "There's some offences in code. Please fix them."
    echo -e "$rubocop_result" | gsed -e 's:.git/tmp/::g'
    exit 1
  fi
fi
